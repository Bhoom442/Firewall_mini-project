import tkinter as tk

# Predefined firewall rules
firewall_rules = {
    "block_ports": [21, 53, 8801],  # Add ports used by apps you want to block
    "block_protocols": ["UDP"],     # e.g., block all UDP traffic
    "allow_protocols": ["TCP"]      # Default protocol allowed
}

# Function to simulate packet filtering
def check_packet():
    protocol = protocol_var.get().upper()
    port = port_entry.get()

    if not port.isdigit():
        result_label.config(text=" Please enter a valid numeric port", fg="red")
        return

    port = int(port)

    if protocol in firewall_rules["block_protocols"]:
        result_label.config(text=f" BLOCKED: {protocol} traffic is blocked", fg="red")
    elif port in firewall_rules["block_ports"]:
        result_label.config(text=f" BLOCKED: Port {port} is blocked", fg="red")
    elif protocol in firewall_rules["allow_protocols"]:
        result_label.config(text=f" ALLOWED: {protocol} traffic on port {port}", fg="green")
    else:
        result_label.config(text=" Not explicitly allowed â€” Blocked by default", fg="orange")

# GUI setup
root = tk.Tk()
root.title("Firewall Packet Checker")
root.geometry("350x250")
root.config(bg="#f7f7f7")

# Title
tk.Label(root, text="Firewall Checker", font=("Helvetica", 16), bg="#f7f7f7").pack(pady=10)

# Protocol dropdown
tk.Label(root, text="Select Protocol:", bg="#f7f7f7").pack()
protocol_var = tk.StringVar(value="TCP")
tk.OptionMenu(root, protocol_var, "TCP", "UDP").pack()

# Port input
tk.Label(root, text="Enter Port Number:", bg="#f7f7f7").pack(pady=5)
port_entry = tk.Entry(root)
port_entry.pack()

# Check button
tk.Button(root, text="Check Access", command=check_packet, bg="#4CAF50", fg="white").pack(pady=10)

# Result
result_label = tk.Label(root, text="", font=("Arial", 12), bg="#f7f7f7")
result_label.pack(pady=10)

# Run the GUI
root.mainloop()
